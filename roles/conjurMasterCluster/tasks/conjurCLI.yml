--- # configures Conjur CLI container for Master cluster

- name: Copy CLI tarfile to target - this takes a few minutes
  copy:
    src: "{{ conjur_tarfile_dir }}/{{ conjur_cli_tarfile }}"
    dest: /tmp/{{ conjur_cli_tarfile }}

- name: Load CLI image from tarfile
  docker_image:
    name: "{{ conjur_cli_image_name }}"
    load_path: /tmp/{{ conjur_cli_tarfile }}
    state: present
    force: yes

#- name: Delete CLI tarfile on target
#  file:
#    path: /tmp/{{ conjur_cli_tarfile }}
#    state: absent

- name: createConjurVolume
  docker_volume:
    name: "{{ item }}"
    state: present
  with_items:
   - hostfactoryTokens
   - identity
   - tls

- name: Copy policy file directory to target machine /tmp/conjur_policies
  copy:
    src: '{{ role_path }}/files/policy/'
    dest: '/tmp/conjur_policies/'

- name: Start Conjur CLI
  docker_container:
    name: "{{ conjur_cli_container_name }}"
    image: "{{ conjur_cli_image_name }}"
    state: started
    volumes:
     - "hostfactoryTokens:/hostfactoryTokens"
     - "identity:/identity"
     - "tls:/tls"
     - "/tmp/conjur_policies:/policy"
    restart_policy: always
    networks:
     - name: "{{ conjur_network_name }}"
    recreate: yes
    entrypoint: []
    command: ["sleep", "infinity"]

- name: Configure CLI for Conjur master
  shell: |
    docker exec {{ conjur_cli_container_name }} bash -c "echo yes | conjur init -u https://{{ conjur_master_hostname }} -a {{ conjur_account }} --force=true"
    docker exec {{ conjur_cli_container_name }} conjur authn login -u admin -p {{ conjur_admin_password }}
